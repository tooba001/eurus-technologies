Parameters:
  MyVPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where resources should be created
  wordpressdatabase:
    Type: String
    Description: wordpress database  
    Default: wordpress-db-id
  RdsEndpoint:
    Type: String
    Description: RDS Endpoint Address
    Default: rds-endpoint-address
  PublicSubnetA:
    Type: String
    Description: public subnet a  
    Default:  public-subnet-a-id
  PublicSubnetB:
    Type: String
    Description: public subnet b  
    Default: public-subnet-b-id
  PrivateSubnetA:    
    Type: String
    Description: private subnet a   
    Default: private-subnet-a-id
  PrivateSubnetB:
    Type: String
    Description: private subnet b 
    Default: private-subnet-b-id
  webservergroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Web server group
    Default: myEC2SecurityGroup 
Resources:
#Security Group for Load Balancer
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access for Load Balancer
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref  MyVPC
 # Launch Configuration
  WebLaunchConfig: 
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0440d3b780d96b29d # Use the appropriate WordPress AMI
      InstanceType: t2.micro # Set as needed
      SecurityGroups:
        -  !Ref webservergroup
      KeyName: tuba-kpr # Update with your SSH key
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y httpd
          sudo systemctl start httpd
          sudo systemctl enable httpd
          sudo yum install -y httpd php php-common php-gd php-mysqli
          sudo systemctl restart httpd
          sudo wget https://wordpress.org/latest.zip
          sudo unzip latest.zip
          sudo cp -r wordpress/* /var/www/html
          sudo chown apache:apache -R /var/www/html
          sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
          sudo sed -i "s/database_name_here/wordpress/" /var/www/html/wp-config.php
          sudo sed -i "s/username_here/wpuser/" /var/www/html/wp-config.php
          sudo sed -i "s/password_here/green200#Tooba/" /var/www/html/wp-config.php
          sudo sed -i "s/localhost/${RdsEndpoint}/" /var/www/html/wp-config.php
          sudo systemctl restart httpd 
 #Target Group
  WPTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: WPTargetGroup
      VpcId: !Ref MyVPC
      Protocol: HTTP
      Port: 80
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
# Load Balancer  
  WPLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: WPLoadBalancer
      Subnets:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
      SecurityGroups:
        - !Ref LBSecurityGroup
      Scheme: internet-facing
      Type: application
 #Load Balancer Listener
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
       DefaultActions:
         - TargetGroupArn: !Ref WPTargetGroup
           Type: forward
       LoadBalancerArn: !Ref WPLoadBalancer
       Port: 80
       Protocol: HTTP
#Autoscaling Group
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:  
        - us-east-1a
        - us-east-1b
      LaunchConfigurationName: !Ref WebLaunchConfig
      MinSize: '2'
      MaxSize: '4'
      DesiredCapacity: '2'
      TargetGroupARNs:   # Use TargetGroupARNs instead of LoadBalancerName
        - !Ref WPTargetGroup 
      HealthCheckType: EC2
      HealthCheckGracePeriod: '300'
      VPCZoneIdentifier: 
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
