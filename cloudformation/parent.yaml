
Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: {}

  # Attach Internet Gateway to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone:  us-east-1a
      MapPublicIpOnLaunch: true

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:  us-east-1b
      MapPublicIpOnLaunch: true

  # Private Subnets
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone:  us-east-1a
      MapPublicIpOnLaunch: false

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone:  us-east-1b
      MapPublicIpOnLaunch: false

# Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  # Public Route
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Associate Public Route Table with Public Subnets
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  # Associate Private Route Table with Private Subnets
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable
      # NAT Gateway
  MyNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt MyEIP.AllocationId
      SubnetId: !Ref PublicSubnetA

  # Elastic IP
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  # Private Route
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNatGateway
  
  databasestack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://tooba-bucket.s3.amazonaws.com/database.yaml
      Parameters:
        MyVPC: !Ref MyVPC
        PublicSubnetA: !Ref PublicSubnetA
        PublicSubnetB: !Ref PublicSubnetB
        PrivateSubnetA: !Ref PrivateSubnetA
        PrivateSubnetB: !Ref PrivateSubnetB
  webserverstack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://tooba-bucket.s3.amazonaws.com/webserver.yaml
      Parameters:
        MyVPC: !Ref MyVPC
        wordpressdatabase: !GetAtt databasestack.Outputs.wordpressdatabase
        RdsEndpoint: !GetAtt databasestack.Outputs.RdsEndpoint
        PublicSubnetA: !Ref PublicSubnetA
        PublicSubnetB: !Ref PublicSubnetB
        PrivateSubnetA: !Ref PrivateSubnetA
        PrivateSubnetB: !Ref PrivateSubnetB
        webservergroup: !GetAtt databasestack.Outputs.webservergroup