Parameters:
  MyVPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where resources should be created
    Default: vpc-12345678
  wordpressdatabase:
    Type: String
    Description: wordpress database  
    Default: wordpress-db-id
  RdsEndpoint:
    Type: String
    Description: RDS Endpoint Address
    Default: rds-endpoint-address
  PublicSubnetA:
    Type: String
    Description: public subnet a  
    Default:  Public-subnet-a-id
  PublicSubnetB:
    Type: String
    Description: public subnet b  
    Default: Public-subnet-b-id
  PrivateSubnetA:    
    Type: String
    Description: private subnet a   
    Default: Private-subnet-a-id
  PrivateSubnetB:
    Type: String
    Description: private subnet b 
    Default: Private-subnet-b-id
Resources:
#DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
# Security Group for EC2 Instances
  webserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      VpcId: !Ref MyVPC
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
  # Security Group for EC2 Instances
  databaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      VpcId: !Ref  MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort:  3306
          ToPort:  3306
          SourceSecurityGroupId: !GetAtt webserverSecurityGroup.GroupId
  #RDS Database
  WordPressDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '10'
      DBInstanceClass: db.t2.micro
      Engine: mysql
      EngineVersion: '8.0.35'
      DBName: WordPressDB
      MasterUsername: admin
      MasterUserPassword: tooba2001
      DBSubnetGroupName: !Ref DBSubnetGroup
      MultiAZ: true 
      VPCSecurityGroups: 
        - !GetAtt databaseSecurityGroup.GroupId  
# EC2 Instance!
  MyEC2Instance:
    DependsOn: WordPressDB
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:  ami-0440d3b780d96b29d # Update with appropriate AMI ID
      SubnetId: !Ref PublicSubnetA
      SecurityGroupIds:
        - !Ref webserverSecurityGroup
      KeyName:  tuba-kpr
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
          wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
          sudo yum localinstall mysql57-community-release-el7-11.noarch.rpm -y
          sudo yum install mysql-community-server -y
          sudo systemctl start mysqld
          sudo mysql -h  "${WordPressDB.Endpoint.Address}" -P 3306  -u admin -ptooba2001
          sudo mysql -h  "${WordPressDB.Endpoint.Address}" -P 3306  -u admin -ptooba2001 -e "CREATE DATABASE wordpress;"
          sudo mysql -h  "${WordPressDB.Endpoint.Address}" -P 3306  -u admin -ptooba2001 -e "CREATE USER 'wpuser'@'%' IDENTIFIED BY 'green200#Tooba';"
          sudo mysql -h  "${WordPressDB.Endpoint.Address}" -P 3306  -u admin -ptooba2001 -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wpuser'@'%';"
          sudo mysql -h  "${WordPressDB.Endpoint.Address}" -P 3306  -u admin -ptooba2001 -e "FLUSH PRIVILEGES;"     
Outputs:
  Myvpc:
    Description: my vpc
    Value: !Ref MyVPC
  PublicSubnetA:
    Description: public subnet
    Value: !Ref PublicSubnetA
  PublicSubnetB:
    Description: public subnet b
    Value: !Ref PublicSubnetB
  PrivateSubnetA:    
    Description: private subnet A
    Value: !Ref PrivateSubnetA
  PrivateSubnetB:
    Description: private subnet B
    Value: !Ref PrivateSubnetB
  mySecurityGroup:
    Description: my security group
    Value: !Ref databaseSecurityGroup
  wordpressdatabase:
    Description: wordpress database
    Value: !Ref WordPressDB
  RdsEndpoint:
    Description: RDS Endpoint Address
    Value: !GetAtt WordPressDB.Endpoint.Address
  webservergroup:
    Description: web server group
    Value: !Ref webserverSecurityGroup